#version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-bot-postgres
    environment:
      POSTGRES_USER: whatsapp_user
      POSTGRES_PASSWORD: whatsapp_password
      POSTGRES_DB: whatsapp_bot_saas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whatsapp_user -d whatsapp_bot_saas"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    container_name: whatsapp-bot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: whatsapp-bot-backend
    environment:
      NODE_ENV: production
      PORT: 3333
      DATABASE_URL: postgresql://whatsapp_user:whatsapp_password@postgres:5432/whatsapp_bot_saas?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      WEBHOOK_URL: ${WEBHOOK_URL}
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3333"
    volumes:
      - ./backend/sessions:/app/sessions
      - ./backend/logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - whatsapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
        NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    container_name: whatsapp-bot-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - whatsapp-network
    restart: unless-stopped

  # Nginx (Load Balancer/Proxy)
  nginx:
    image: nginx:alpine
    container_name: whatsapp-bot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    networks:
      - whatsapp-network
    restart: unless-stopped

networks:
  whatsapp-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: